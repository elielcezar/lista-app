// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  name      String  
  password  String?    
  createdAt DateTime? @default(now())  
  imoveis   ImovelUser[]
}

model Imovel {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  titulo          String    
  descricaoLonga  String?
  fotos           String[]  
  status          Boolean  @default(false)     
  usuarios        ImovelUser[]
  createdAt       DateTime? @default(now())
  updatedAt       DateTime? @default(now())
}

model ImovelUser {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  imovelId  String   @db.ObjectId
  userId    String   @db.ObjectId
  imovel    Imovel   @relation(fields: [imovelId], references: [id])
  user      User     @relation(fields: [userId], references: [id])

  @@unique([imovelId, userId])
}


/*datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int     @id @default(autoincrement())
  email     String   @unique
  name      String  
  password  String
  createdAt DateTime? @default(now())  
  updatedAt DateTime? @default(now())
}

model Portfolio {
  id              Int     @id @default(autoincrement())
  titulo          String    
  descricao       String?
  imagem          String
  status          Boolean  @default(false)     
  createdAt       DateTime? @default(now())
  updatedAt       DateTime? @default(now())
}*/